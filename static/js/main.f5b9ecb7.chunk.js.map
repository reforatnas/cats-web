{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","res","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHTC,G,MAAW,SAAAR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SACDD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJnBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCHG,G,wDAvCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAGf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARR,E,gEAWO,IAAD,OAClBC,MAAM,+CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,mCAG7BE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,+BAG9B,IAAD,EAC2BF,KAAKV,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZY,EAAmBrB,EAASsB,QAAQ,SAAA3B,GAAO,OAC/CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACA,8CACE,cAAC,EAAD,CACEW,YAAa,cACbC,aAAgBc,KAAKd,eAEvB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAlCVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5b9ecb7.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css'\n\nexport const Card = (props) => (\n    <div className='card-container'>\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`} />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.style.css';\n\nexport const CardList = props => {\n   return <div className='card-list'>\n        {props.monsters.map(monster => (\n             <Card key={monster.id} monster={monster}/>\n          ))}\n   </div>;\n   }\n\n","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input \n        className='search'\n        type='search'\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n) ","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users/') \n    .then(res => res.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter (monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className='App'>\n      <h1>Cats Rolodex</h1>\n        <SearchBox \n          placeholder ='Search Cats'\n          handleChange = {this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}